{"version":3,"file":"buffered-list.js","sources":["src/arrays.js","src/View.js","src/BufferedListItemView.js","src/BufferedListView.js","src/buffered-list.js"],"sourcesContent":["export default {\n  createConstantArray(...elements) {\n    // create array with predefined properties 0, 1, 2, n...\n    const array = new Array(elements.length);\n    for (let index = 0; index < elements.length; index++) {\n      // typeof array === 'object' =D so,\n      // Assign each elements as enumerable non-writable\n      Object.defineProperty(array, index, {\n        configurable: false, writable: false, enumerable: true,\n        value: elements[index]\n      });\n    }\n    return array;\n  }\n};","import jQuery from 'jquery';\n\nexport default class View {\n\n  get isAttached() {\n    return !!this.el && !!this.el.parentNode;\n  }\n\n  constructor() {\n    this.$el = jQuery(this.el = document.createElement(this.constructor.tagName || 'div'));\n    this.$el.addClass('view');\n    this.model = null;\n    if (typeof DEV_MODE !== 'undefined') this.el.__view__ = this;\n  }\n\n  destroy() {\n    if (this.el) {\n      if ('__view__' in this.el) this.el.__view__ = null;\n      this.remove();\n    }\n  }\n\n  $() {\n    return this.$el.find.apply(this.$el, arguments);\n  }\n\n  clear() {\n    this.remove();\n    this.el.innerHTML = '';\n    this.model = null;\n  }\n\n  remove() {\n    if (this.el.parentNode) {\n      this.el.parentNode.removeChild(this.el);\n    }\n  }\n\n  template() {\n    return '';\n  }\n\n  render() {\n    this.el.innerHTML = this.template();\n  }\n}\nView.DESTROY_METHOD = 'destroy';","import View from './View';\n\nexport default class BufferedListItemView extends View {\n  constructor() {\n    super();\n    this.$el.addClass('item-view');\n  }\n\n  destroy() {\n    super.destroy();\n    this.indexInModelList = null;\n    this.model = null;\n    this.parentListView = null;\n  }\n\n  template() {\n    return String(this.indexInModelList);\n  }\n\n  onInitialize({ model, parentListView, indexInModelList }) {\n    this.model = model;\n    this.parentListView = parentListView;\n    this.indexInModelList = indexInModelList;\n    this.el.setAttribute('data-index', this.indexInModelList);\n  }\n\n  onUpdate(event)Â {\n    this.indexInModelList = event.indexInModelList;\n    this.el.setAttribute('data-index', this.indexInModelList);\n  }\n}\n\nBufferedListItemView.tagName = 'li';","import $ from 'jquery';\nimport KLogger from 'klogger';\nimport View from './View';\nimport BufferedListItemView from './BufferedListItemView';\nimport Arrays from './arrays';\n\nconst logger = new KLogger(KLogger.WARN);\nlet EventManager;\n\n/*\n * interface EventManager {\n *   on(eventName, eventCallback, eventContext?);\n *   off(eventName, eventCallback, eventContext?);\n *   trigger(eventName, eventValue);\n * }\n */\n\nexport default class BufferedListView extends View {\n\n  static setEventManager(eventManager) {\n    EventManager = eventManager;\n  }\n\n  static setLogLevel(levelName) {\n    levelName = levelName.toUpperCase();\n    if (levelName in KLogger) logger.loglevel = KLogger[levelName];\n  }\n\n  /**\n   *\n   * @param {Object} options\n   * @param {String} options.listContainerSelector      - Selector where to append child\n   * @param {String} options.scrollerContainerSelector  - Selector to get on this element the scrollTop value\n   * @param {String|Number} options.listHeight          - Define the list height (can be 'auto')\n   * @param {Number} options.listItemHeight             - Define the list item height. Used to set position for each child\n   * @param {Number} options.visibleOutboundItemsCount  - Set the number of items rendered out of the visible rectangle.\n   * @param {Array} options.models                      - The list of models to be rendered\n   * @param {String} options.idModelPropertyName        - The propetyName which identify each objects\n   * @param {Function} options.ItemConstructor          - The constructor for each child views (default: BufferedListItemView)\n  **/\n  constructor({ listContainerSelector, scrollerContainerSelector, listHeight, listItemHeight, idModelPropertyName, visibleOutboundItemsCount, ItemConstructor, models } = {}) {\n    super();\n    if (EventManager) $.extend(this, EventManager);\n    else throw 'UndefinedEventManagerError: Please set by calling BufferedListView.setEventManager(eventManager : Object)';\n    Object.defineProperty(this, '_currentVisibleRange', {\n      configurable: true, writable: false,\n      value: Arrays.createConstantArray(0, 0)\n    });\n    this.scrollPositionY = 0;\n    this.isRendered = false;\n    this.$listContainer = null;\n    this.$scrollerContainer = null;\n\n    this.listContainerSelector = listContainerSelector || '.list-container:first > .list-display';\n    this.scrollerContainerSelector = scrollerContainerSelector || '.list-container:first';\n    this.listHeight = listHeight || 'auto';\n    this.listHeightAutoMode = this.listHeight === 'auto';\n    this.listItemHeight = listItemHeight;\n    this.idModelPropertyName = idModelPropertyName || 'id';\n\n    this.visibleOutboundItemsCount = typeof visibleOutboundItemsCount !== 'number' ? 2 : visibleOutboundItemsCount;\n\n    this.viewsMap = new Map();\n    this.models = models || [];\n    this.ItemConstructor = ItemConstructor || null;\n\n    this._onWindowResize = this.onResize.bind(this);\n    $(window).on('resize', this._onWindowResize);\n\n    if (this.listHeightAutoMode) {\n      this.once('attach', () => {\n        this.listHeight = this.queryListHeight();\n        if (this.isRendered) {\n          this.updateListScrollerHeight();\n          this.renderVisibleItems();\n        }\n      });\n    }\n  }\n\n  destroy() {\n    logger.debug('Destroying instance of BufferedListView');\n    $(window).off('resize', this._onWindowResize);\n    if (this.el && '__view__' in this.el) this.el.__view__ = null;\n    super.destroy();\n    this.isRendered = false;\n    this.listContainerSelector = null;\n    this.scrollerContainerSelector = null;\n    this.scrollPositionY = 0;\n    this.listHeight = null;\n    this.listHeightAutoMode = null;\n    this.listItemHeight = null;\n    this.idModelPropertyName = null;\n    this.visibleOutboundItemsCount = null;\n    this.models = null;\n    this.ItemConstructor = null;\n    this.viewsMap = null;\n    this._onWindowResize = null;\n    this.$listContainer = null;\n    this.$scrollerContainer = null;\n  }\n\n  setModels(models = []) {\n    this.models = models;\n    Object.defineProperty(this, '_currentVisibleRange', {\n      configurable: true, writable: false,\n      value: Arrays.createConstantArray(-1, -1)\n    });\n    this.updateListScrollerHeight();\n    this.renderVisibleItems();\n  }\n\n  /**\n   * Returns the ItemView used to render each models\n   * @returns {Function}\n  **/\n  getItemConstructor() {\n    return this.ItemConstructor || BufferedListItemView;\n  }\n\n/* Rendering related methods */\n\n  /**\n   * Returns the html content of a empty BufferedListView\n   * @returns {String}\n  **/\n  template() {\n    return '<div class=\"list-container\"><div class=\"list-content\"></div><ol class=\"list-display\"></ol></div>';\n  }\n\n  /**\n   * Put the value returned by template method and listen all events necessary\n  **/\n  render() {\n    // render view\n    this.renderBaseView();\n    this.isRendered = true;\n    // query elements\n    this.$listContainer = this.$(this.listContainerSelector);\n    this.$scrollerContainer = this.$(this.scrollerContainerSelector);\n    // set on scroll listener\n    /* Try to use passive event\n    const scrollerContainerElement = this.$scrollerContainer.get(0);\n    if (scrollerContainerElement) {\n      scrollerContainerElement.addEventListener('scroll', this.onScroll.bind(this), {\n        passive: true,\n        capture: false\n      });\n    }*/\n    this.$scrollerContainer.on('scroll', this.onScroll.bind(this));\n\n    if (this.isAttached) {\n      if (this.listHeightAutoMode) this.listHeight = this.queryListHeight();\n      this.updateListScrollerHeight();\n      this.renderVisibleItems();\n    }\n  }\n\n  renderBaseView() {\n    this.$el.html(this.template());\n  }\n\n  attachTo(element) {\n    $(element).append(this.$el);\n    if (this.el.parentNode) this.trigger('attach');\n  }\n\n  /**\n   * Scroll to the index of a model\n   * @param {Number} index - The index of the model in models array\n   * @param {?Object} options\n   * @param {Object} options.animate - scroll with animation\n  **/\n  scrollToIndex(index, options = {}) {\n    const scrollTopPosition = index * this.listItemHeight;\n    if (options.animate) {\n      this.$scrollerContainer.animate({\n        scrollTop: scrollTopPosition\n      }, options.duration || 300);\n    } else {\n      this.$scrollerContainer.scrollTop(scrollTopPosition);\n    }\n  }\n\n  /**\n   * Calculate the total height of this view\n  **/\n  queryListHeight() {\n    return this.$el.outerHeight();\n  }\n\n  /**\n   * Update the scroller height. It results that the list scrolling is adapted to its content\n  **/\n  updateListScrollerHeight() {\n    this.$scrollerContainer.find('.list-content').height(`${this.models.length * this.listItemHeight}px`);\n  }\n\n  /**\n   * Define with scrollPositionY, listItemHeight and listHeight the range of models which should be visible\n   * @returns {Number[]} [ startIndex, endIndex ]\n  **/\n  defineRangeOfModelsVisibles() {\n    const start = Math.floor(this.scrollPositionY / this.listItemHeight);\n    const length = Math.ceil(this.listHeight / this.listItemHeight);\n    const end = Math.min(this.models.length - 1, start + length);\n    return [ start, end ];\n  }\n\n  getRangeOfModels([ start, end ]) {\n    return this.models.slice(start, end);\n  }\n\n  /**\n   *\n   * @param {number[]} tuple - [ startIndex, endIndex ]\n   * @param {boolean} forceRendering\n  **/\n  renderItemsRange([ start, end ], forceRendering = false) {\n    if (!forceRendering && this._currentVisibleRange[0] === start && this._currentVisibleRange[1] === end) return;\n    const modelsStart = Math.max(0, start - this.visibleOutboundItemsCount);\n    const modelsEnd = Math.min(this.models.length, end + this.visibleOutboundItemsCount);\n    const rangeOfModels = this.getRangeOfModels([ modelsStart, modelsEnd ]);\n    const views = rangeOfModels.map((model, index) => {\n      return this.getView(model, modelsStart + Number(index));\n    });\n    this.renderViews(views);\n    Object.defineProperty(this, '_currentVisibleRange', {\n      configurable: true, writable: false,\n      value: Arrays.createConstantArray(start, end)\n    });\n    if (BufferedListView.debugMode) this.renderDebugInfos();\n  }\n\n  /**\n   * Render items that should be currently visible\n  **/\n  renderVisibleItems(forceRendering) {\n    // ensure forceRendering is true.\n    this.renderItemsRange(this.defineRangeOfModelsVisibles(), forceRendering === true);\n  }\n\n  /**\n   * Render the given array of views into this list\n   * @method\n   * @param {any[]} views\n  **/\n  renderViews(views) {\n    const currentViews = [...this.viewsMap.values()];\n    if (currentViews.length === 0) {\n      this.addViews(views);\n    } else {\n      const viewsToRemove = currentViews.filter((view) => { return !views.includes(view); });\n      const viewsToAdd = views;\n      this.removeViews(viewsToRemove);\n      this.addViews(viewsToAdd);\n    }\n  }\n\n\n/* view list management */\n\n  /**\n   * Get a view from the views pool\n   * @param {Object} model\n   * @param {Number} indexInModelList\n   * @returns {any}\n  **/\n  getView(model, indexInModelList) {\n    let view = this.viewsMap.get(model[this.idModelPropertyName]);\n\n    if (typeof this.idModelPropertyName === 'undefined') {\n      throw new Error('BufferedListView#idModelPropertyName must be defined');\n    }\n    if (typeof model[this.idModelPropertyName] === 'undefined') {\n      throw new Error(`The model.${this.idModelPropertyName} is undefined. There is no chance to show more than one view.`);\n    }\n    if (!view) {\n      view = this.createView(model, indexInModelList);\n      this.viewsMap.set(model[this.idModelPropertyName], view);\n      view.render();\n    } else view.onUpdate({ indexInModelList: indexInModelList, parentListView: this, type: 'update' });\n\n    return view;\n  }\n\n  createView(model, indexInModelList) {\n    const view = new (this.getItemConstructor())();\n    view.onInitialize({ type: 'initialize', model: model, parentListView: this, indexInModelList: indexInModelList });\n    return view;\n  }\n\n  /**\n   * Remove the given views list from this view\n   * @param {any[]} views\n  **/\n  removeViews(views) {\n    for (let index = 0; index < views.length; index++) {\n      this.removeView(views[index]);\n    }\n  }\n\n  /**\n   * Remove the given view from this view\n   * @param {any} view\n  **/\n  removeView(view) {\n    this.viewsMap.delete(view.model[this.idModelPropertyName]);\n    view[this.getItemConstructor().DESTROY_METHOD]();\n    view.parentListView = null;\n    view.model = null;\n  }\n\n  /**\n   * Add the given views list from this view\n   * @param {any[]} views\n  **/\n  addViews(views) {\n    for (let index = 0; index < views.length; index++) {\n      this.addView(views[index], index);\n    }\n  }\n\n  /**\n   * Add the given view from this view\n   * @param {any} view\n  **/\n  addView(view, index) {\n    const $container = this.$listContainer;\n    const $children = $container.children();\n    const positionTop = this.listItemHeight * view.indexInModelList;\n    view.el.style.top = String(positionTop) + 'px';\n    if ($children.length <= index) {\n      $container.append(view.el);\n    } else if (index === 0) {\n      $container.prepend(view.el);\n    } else {\n      $($container.children().get(index)).after(view.el);\n    }\n  }\n\n/* Events */\n\n  onResize(event) {\n    this._onResize(event);\n    this.renderVisibleItems();\n  }\n\n  onScroll(event) {\n    this._onScroll(event);\n  }\n\n  /* Class behavior dependent events */\n\n  /**\n   * When the viewport is resized and this.listHeightAutoMode is truthy, update list height\n   * @param {Event}\n  **/\n  _onResize(event) {\n    if (this.listHeightAutoMode) this.listHeight = this.queryListHeight();\n  }\n\n  /**\n   * When the user scroll the list-scroller, update scroll position and render visible items\n   * @param {Event} event\n  **/\n  _onScroll(event) {\n    this.scrollPositionY = this.$scrollerContainer.scrollTop();\n    this.renderVisibleItems();\n  }\n\n/* Debug */\n\n  toDebugInfos() {\n    const [ startIndex, endIndex ] = this.defineRangeOfModelsVisibles();\n    return `Visible range: (${startIndex}, ${endIndex})\\nVisible models: (${Math.max(0, startIndex - this.visibleOutboundItemsCount)}, ${Math.min(this.models.length - 1, endIndex + this.visibleOutboundItemsCount)})`;\n  }\n\n  renderDebugInfos() {\n    $('#debug-container').html(`<div>${this.toDebugInfos().replace('\\n', '</div><div>')}</div>`);\n  }\n}\n\nBufferedListView.VERSION = '1.1.5';\nBufferedListView.debugMode = false;\nBufferedListView.INSTANCE_PROPERTIES = {\n  // BufferedListView\n  _currentVisibleRange: null,\n  isRendered: false,\n  listContainerSelector: null,\n  scrollerContainerSelector: null,\n  scrollPositionY: 0,\n  listHeight: null,\n  listHeightAutoMode: null,\n  listItemHeight: null,\n  idModelPropertyName: null,\n  visibleOutboundItemsCount: null,\n  models: Array,\n  ItemConstructor: null,\n  viewsMap: Map,\n  _onWindowResize: null,\n  $listContainer: null,\n  $scrollerContainer: null\n};\n\n\n","import Arrays from './arrays';\nimport View from './View';\nimport BufferedListItemView from './BufferedListItemView';\nimport BufferedListView from './BufferedListView';\n\nexport default {\n  Arrays,\n  View,\n  BufferedListItemView,\n  BufferedListView\n};\n"],"names":["elements","array","Array","length","index","defineProperty","writable","enumerable","View","el","parentNode","$el","jQuery","document","createElement","constructor","tagName","addClass","model","DEV_MODE","__view__","remove","find","apply","arguments","innerHTML","removeChild","template","DESTROY_METHOD","BufferedListItemView","indexInModelList","parentListView","String","setAttribute","event","logger","KLogger","WARN","EventManager","BufferedListView","eventManager","levelName","toUpperCase","loglevel","listContainerSelector","scrollerContainerSelector","listHeight","listItemHeight","idModelPropertyName","visibleOutboundItemsCount","ItemConstructor","models","$","extend","Arrays","createConstantArray","scrollPositionY","isRendered","$listContainer","$scrollerContainer","listHeightAutoMode","viewsMap","Map","_onWindowResize","onResize","bind","window","on","once","queryListHeight","updateListScrollerHeight","renderVisibleItems","debug","off","renderBaseView","onScroll","isAttached","html","element","append","trigger","options","scrollTopPosition","animate","duration","scrollTop","outerHeight","height","start","Math","floor","ceil","end","min","slice","forceRendering","_currentVisibleRange","modelsStart","max","modelsEnd","rangeOfModels","getRangeOfModels","views","map","getView","Number","renderViews","debugMode","renderDebugInfos","renderItemsRange","defineRangeOfModelsVisibles","currentViews","values","addViews","viewsToRemove","filter","view","includes","viewsToAdd","removeViews","get","Error","createView","set","render","onUpdate","type","getItemConstructor","onInitialize","removeView","delete","addView","$container","$children","children","positionTop","style","top","prepend","after","_onResize","_onScroll","startIndex","endIndex","toDebugInfos","replace","VERSION","INSTANCE_PROPERTIES"],"mappings":"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"}